---
- name: Deploy Frontend Application with Docker and Nginx (SSL at ALB)
  hosts: baopun-website
  become: yes

  vars:
    frontend_image: "ghcr.io/baopun/baopun-website:latest"
    frontend_container_name: "baopun-website"
    frontend_env:
      NODE_ENV: "production"
    nginx_conf_src: "templates/nginx.conf.j2"
    nginx_conf_dest: "/etc/nginx/conf.d/default.conf"

  vars_files:
    - vars/secrets.yml
    - vars/env.yml

  tasks:
    - name: Install Docker
      dnf:
        name:
          - docker
        state: present

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Start & enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ec2-user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Stop host Nginx (if running)
      service:
        name: nginx
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Remove host Nginx package
      dnf:
        name: nginx
        state: absent
      ignore_errors: yes

    - name: Ensure application directory exists
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Render environment file for the container
      template:
        src: templates/env.j2
        dest: "{{ app_directory }}/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0600"

    - name: Log in to GitHub Container Registry
      docker_login:
        registry_url: ghcr.io
        username: "{{ ghcr_username }}"
        password: "{{ ghcr_pat }}"

    - name: Remove any running containers using port 80 and 3000
      shell: |
        docker ps --filter "publish=80" --format "{{'{{'}}.ID{{'}}'}}" | xargs -r docker rm -f
        docker ps --filter "publish=3000" --format "{{'{{'}}.ID{{'}}'}}" | xargs -r docker rm -f
      ignore_errors: yes

    - name: Install Nginx
      dnf:
        name: nginx
        state: present

    - name: Start and enable Nginx
      service:
        name: nginx
        state: started
        enabled: yes

    # Write the main nginx.conf (global config)
    - name: Copy static nginx.conf
      copy:
        src: ../nginx/nginx.conf           
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: '0644'

    # Write the templated server block to conf.d
    - name: Configure Nginx server block
      template:
        src: "{{ nginx_conf_src }}"     
        dest: "{{ nginx_conf_dest }}"   
        mode: '0644'

    - name: Pull latest frontend container image
      docker_image:
        name: "{{ frontend_image }}"
        source: pull
        tag: latest
        force_source: yes

    - name: Start frontend container
      docker_container:
        name: "{{ frontend_container_name }}"
        image: "{{ frontend_image }}"
        env: "{{ frontend_env }}"
        env_file: "{{ app_directory }}/.env"
        restart_policy: unless-stopped
        ports:
          - "3000:3000"

    